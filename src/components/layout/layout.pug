mixin layout()
  .layout
    block

mixin layout__header()
  header.layout__header
    block

mixin layout__main()
  main.layout__main
    block

mixin layout__footer()
  footer.layout__footer
    block

//-
  options.display - задает display, возможное значение 'block', по-умолчанию 'flex'
  options.dasis - задает flex-basis в пикселях, от 50 до 4000 с шагом 50 или auto, по-умолчанию 100%
  options.grow - задает flex-grow, от 0 до 10, по-умолчанию 1
  options.shrink - задает flex-shrink, от 0 до 10, по-умолчанию 1
  options.wrap - задает flex-wrap, возможные значения 'wrap', 'wrap-reverse', по-умолчанию 'nowrap'
  options.direction - задает flex-direction, возможные значения 'column', 'column-reverse',
                      'row-reverse', по-умолчанию 'row'
  options.align - горизонтальное выравнивание относительно родительского контейнера,
                  не сработает если у соседнего контейнера flex-grow > 0,
                  возможные значения 'left', 'right', 'center'
  options.gap - отступы между блоками
  options.mix - любая строка, будет добавлена в классы контейнера
mixin layout__container(options)
  if !options
    - options = {}

  -
    var classes = ''
    classes += options.display ? ' layout__container_' + options.display : ''
    classes += options.basis ? ' layout__container_basis-' + options.basis : ''
    classes += options.grow ? ' layout__container_grow-' + options.grow : ''
    classes += options.shrink ? ' layout__container_shrink-' + options.shrink : ''
    classes += options.wrap ? ' layout__container_' + options.wrap : ''
    classes += options.direction ? ' layout__container_' + options.direction : ''
    classes += options.gap ? ' layout__container_gap-' + options.gap : ''
    classes += options.align ? ' layout__container_' + options.align : ''
    classes += options.mix ? ' ' + options.mix : ''
  .layout__container(class= classes)
    block